stages:
  - build
  - deploy

variables:
  IMAGE_NAME: "ywkbm/auth:latest" 
  CONTAINER_NAME: "auth"


build:
  stage: build
  image: docker:latest
  services:
    - docker:20.10.16-dind
  before_script:
    - git config --global credential.helper store
    - echo "http://$CI_JOB_TOKEN@git.ywkbm.ru" > ~/.git-credentials
    - echo $DOCKER_PASSWORD | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

  script:
    - docker builder prune -f 
    - docker build -t $IMAGE_NAME:latest  .
    - docker push $IMAGE_NAME
  only:
    - master


deploy:
  stage: deploy
  image: alpine:latest

  services:
  - docker:dind

  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $IP_ADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - touch .env
    - echo HOST=$HOST >> .env
    - echo PORT=$PORT >> .env
    - echo DB_USER=$DB_USER >> .env
    - echo DB_NAME=$DB_NAME >> .env
    - echo SSL_MODE=$SSL_MODE >> .env
    - echo DB_PORT=$DB_PORT >> .env
    - echo DB_PASS=$DB_PASS >> .env
    - echo DB_HOST=$DB_HOST >> .env
    - echo RABBIT_URL=$RABBIT_URL >> .env

    - scp .env $SSH_USER@$IP_ADDRESS:/home/$SSH_USER/dev/$CONTAINER_NAME/
    - ssh $SSH_USER@$IP_ADDRESS "docker stop $CONTAINER_NAME || true && docker rm -f $CONTAINER_NAME || true && docker rmi $IMAGE_NAME | docker pull $IMAGE_NAME | docker run --name $CONTAINER_NAME --env-file /home/$SSH_USER/dev/$CONTAINER_NAME/.env -p 82:82 -d $IMAGE_NAME"

  only:
    - master
